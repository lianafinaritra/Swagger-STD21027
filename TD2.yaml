openapi: 3.0.1
info:
  title: STD21027 CINEMA ROOM
  description: API Cinema Description
  version: 1.0.0

servers:
- url: https://STD21027.com
tags:
- name: Films
- name: Rooms
- name: Projections

paths:
  /films:
    get:
      tags:
      - Films
      summary: Get all films
      description: Get all films with details
      operationId: getAllFilms
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: page_size
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: List of films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        400:
          description: Bad request
          
    post:
      tags:
      - Films
      summary: Create new film
      description: Request to add a new film
      operationId: addFilm
      requestBody:
        description: Film to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilm'
        required: true
      responses:
        200:
          description: Film information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        400:
          description: Bad request
          
    put:
      tags:
      - Films
      summary: Update film
      description: Change all informations of a film
      operationId: putFilm
      requestBody:
        description: Film to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Film'
        required: true
      responses:
        200:
          description: New information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        400:
          description: Bad request
          
  /films/{id}:
    get:
      tags:
      - Films
      summary: Get film
      description: Get film with id
      operationId: getFilm
      parameters:
      - name: id
        in: path
        required: true
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Film found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateFilm'
        400:
          description: Bad request
          
    delete:
      tags:
      - Films
      summary: Delete film
      description: Delete film
      operationId: deleteFilm
      parameters:
      - name: id
        in: path
        required: true
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Student deleted
        400:
          description: Bad request
  
  /rooms:
    get:
      tags:
      - Rooms
      summary: Get all rooms
      description: Get all rooms with details
      operationId: getAllRooms
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: page_size
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: List of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
                  
  /rooms/{id}:
    get:
      tags:
      - Rooms
      summary: Get room
      description: Get room with details
      operationId: getRoom
      parameters:
      - name: id
        in: path
        required: true
        explode: true
        schema:
          type: number
          enum:
            - 1
            - 2
      responses:
        200:
          description: List of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
                  
  /projections:
    get:
      tags:
      - Projections
      summary: Get all projections
      description: Get all projections with details
      operationId: getAllProjections
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: page_size
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: List of projections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Projection'
                  
    post:
      tags:
      - Projections
      summary: Create new projection
      description: Request to add a new projection
      operationId: addProjection
      requestBody:
        description: Projection to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjection'
        required: true
      responses:
        200:
          description: Film information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Projection'
        400:
          description: Bad request
          
    put:
      tags:
      - Projections
      summary: Update projection
      description: Change all informations of projection
      operationId: putProjection
      requestBody:
        description: Projection to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projection'
        required: true
      responses:
        200:
          description: New information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        400:
          description: Bad request
          
    patch:
      tags:
      - Projections
      summary: Update projection
      description: Change informations of projection
      operationId: patchProjection
      requestBody:
        description: Film to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projection'
            examples:
              changeTime:
                summary: Change time
                description: How to change time and what it does
                value:
                 id: 10
                 Time: "New time"
        required: true
      responses:
        200:
          description: New information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Projection'
        400:
          description: Bad request
          
  /projections/{id}:
    get:
      tags:
      - Projections
      summary: Get projection
      description: Get projection with id
      operationId: getProjection
      parameters:
      - name: id
        in: path
        required: true
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Film projection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateProjection'
        400:
          description: Bad request
          
    delete:
      tags:
      - Projections
      summary: Delete projection
      description: Delete projection
      operationId: deleteProjection
      parameters:
      - name: id
        in: path
        required: true
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Projection deleted
        400:
          description: Bad request
  
  /film/category:
    get:
      tags:
      - Films
      summary: Get all category
      description: Get all category with details
      operationId: getAllCategory
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: page_size
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: List of category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    
    post:
      tags:
      - Films
      summary: Create new category
      description: Request to add a new category
      operationId: addCategory
      requestBody:
        description: Category to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategory'
        required: true
      responses:
        200:
          description: Film information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        400:
          description: Bad request
    
    put:
      tags:
      - Films
      summary: Update category
      description: Change all informations of a category
      operationId: putCategory
      requestBody:
        description: Category to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        200:
          description: New information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        400:
          description: Bad request
          
  /film/category/{id}:
    delete:
      tags:
      - Films
      summary: Delete category
      description: Delete category
      operationId: deleteCategory
      parameters:
      - name: id
        in: path
        required: true
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Category deleted
        400:
          description: Bad request
  
  /calendar:
    get:
      tags:
      - Calendar
      summary: Get all projections of this week
      description: Get all projections of this week
      operationId: getProjectionsofCalendar
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: page_size
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: List of projections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Calendar' 
          
components:
  schemas:
    CreateFilm:
      type: object
      properties:
        title:
          type: string
          example: "The Walking Dead"
        duration:
          type: string
          example: "2h 30min"
        summary:
          type: string
          example: "C'est l'histoire de la mort qui marche"
        producer:
          type: string
          example: "Random Guy"
        release_date:
          type: string
          format: date
          example: "2022-01-01"
        category:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "dramatique"
    Film:
      allOf:
        - $ref: '#/components/schemas/CreateFilm'
      type: object
      properties:
        id:
          type: integer
          example: 10
    CreateProjection:
      type: object
      allOf:
        - $ref: '#/components/schemas/CalendarProjection'
      properties:
        Time:
          type: string
          format: date-time
    CalendarProjection:
      type: object
      properties:
        Film:
          type: array
          items:
            $ref: '#/components/schemas/Film'
        Room:
          type: array
          items:
            $ref: '#/components/schemas/Room'
    Projection:
      allOf:
        - $ref: '#/components/schemas/CreateProjection'
      type: object
      properties:
        id:
          type: integer
          example: 10
    CreateCategory:
      type: object
      properties:
        name:
          type: string
          example: 'Dramatique'
    Category:
      allOf:
        - $ref: '#/components/schemas/CreateCategory'
      type: object
      properties:
        id:
          type: integer
          example: 10
    Calendar:
      type: object
      properties:
        weekOf:
          type: string
          format: date
          example: 2022-08-01
        calendar:
          type: array
          items:
            $ref: "#/components/schemas/Day"
    Day:
      type: object
      properties:
        date:
         type: string
         example: Monday, 01 August 2022
        schedules:
          type: array
          items: 
            $ref: "#/components/schemas/Schedule"
    Schedule:
      type: object
      properties:
        hour:
          type: string
          example: 08:00 AM
        screening:
         $ref: '#/components/schemas/CalendarProjection'
    Room:
      type: object
      properties:
        id:
          type: string
          example: "A"
        capacity:
          type: number
          example: 200
