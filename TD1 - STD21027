openapi: 3.0.1
info:
  title: STD21027
  description: API Description
  
  version: 1.0.0

servers:
- url: https://STD21027.com
tags:
- name: Students
- name: Courses

paths:

  /students:
    get:
      tags:
      - Students
      summary: Get all students
      description: Get all students with details
      operationId: getAllStudents
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: page_size
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
          
    post:
      tags:
      - Students
      summary: Create new student
      description: Request to add a new student
      operationId: addStudent
      requestBody:
        description: Students to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
        required: true
      responses:
        200:
          description: Student information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
     
    put:
      tags:
      - Students
      summary: Update student
      description: Change all informations of student
      operationId: putStudent
      requestBody:
        description: Student to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        200:
          description: New information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
          
    patch:
      tags:
      - Students
      summary: Update student
      description: Change informations of student
      operationId: patchStudent
      requestBody:
        description: Student to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudent'
            examples:
              changeName:
                summary: Change name
                description: How to change name and what it does
                value:
                 id: 1
                 name: "New name"
              changeAddress:
                summary: Change address
                description: How to change address and what it does
                value:
                 id: 1
                 name: "Ivandry"
              changeNameandAddres:
                summary: Change name and address but not all
                value:
                  id: 1
                  name: "Rakoto"
                  address: "Ivandry"
              addPhoneNumbers:
                summary: Add new phone numbers
                value:
                  id: 1
                  PhoneNumbers:
                  - number : '0344061205'
                    country_code: '+261'
                  - number : '0347592498'
                    country_code: '+261'
        required: true
      responses:
        200:
          description: New information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
  
  /students/{id}:
    get:
      tags:
      - Students
      summary: Get student
      description: Get student with id
      operationId: getStudents
      parameters:
      - name: id
        in: path
        required: true
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Student found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateStudent'
        400:
          description: Bad request
          
    delete:
      tags:
      - Students
      summary: Delete student
      description: Delete student with id
      operationId: deleteStudent
      parameters:
      - name: id
        in: path
        required: true
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Student deleted
        400:
          description: Bad request
  
  /courses:
    get:
      tags:
      - Courses
      summary: Get all courses
      description: Get all courses with details
      operationId: getAllCourses
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: page_size
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad request
          
    post:
      tags:
      - Courses
      summary: Create new course
      operationId: addCourse
      requestBody:
        description: Course to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourse'
        required: true
      responses:
        200:
          description: Course information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad request
          
    put:
      tags:
      - Courses
      summary: Update course
      description: Change all informations of course
      operationId: putCourse
      requestBody:
        description: Course to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        200:
          description: New information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad request
    
    patch:
      tags:
      - Courses
      summary: Update course
      description: Change informations of course
      operationId: patchCourse
      requestBody:
        description: Course to be changed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourse'
        required: true
      responses:
        200:
          description: New information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad request
  
  /courses/{id}:
    get:
      tags:
      - Courses
      summary: Get student
      description: Get student with id
      operationId: getCourses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Course found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateCourse'
        400:
          description: Bad request  
          
    delete:
      tags:
      - Courses
      summary: Delete course
      description: Delete course with id
      operationId: deleteCourses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Course deleted
        400:
          description: Bad request
  
components:
  schemas:
    CreateStudent:
      type: object
      properties:
        name:
          type: string
          example: "Rakoto"
        birth_date:
          type: string
          format: date
          example: "2022-01-01"
        Phonenumber:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
    CreateCourse:
      type: object
      properties:
        code:
          type: string
          example: "Prog2"
        name:
          type: string
          example: "Algorithmique"
        teacher:
          type: string
          example: "Tokimahery RAMAROZAKA"
        createdDate:
          type: string
          format: date
          example: "2022-01-01"
    UpdateStudent:
      properties:
        name:
          type: string
          example: "Rakoto"
        id:
          type: integer
          example: 10
    UpdateCourse:
      type: object
      properties:
        name:
          type: string
          example: "Algorithmique"
        teacher:
          type: string
          example: "Tokimahery RAMAROZAKA"
        id:
          type: integer
          example: 10
    Student:
      allOf:
        - $ref: '#/components/schemas/CreateStudent'
      type: object
      properties:
        id:
          type: integer
          example: 10
    Course:
      allOf:
        - $ref: '#/components/schemas/CreateCourse'
      type: object
      properties:
        id:
          type: integer
          example: 10
    PhoneNumber:
      type: object
      properties:
        number:
          type: string
          example: "0340000000"
        country_code:
          type: string
          example: "+261"
